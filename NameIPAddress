#This code will print the entire inventory AP name and IP address.
# @jamiegprice https://jamiegprice.substack.com/

import requests

BASE_URL = 'https://api.meraki.com/api/v1/'

def get_api_key():
    return input("Enter your Meraki API key: ")

def get_organizations(api_key):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + 'organizations', headers=headers)
        response.raise_for_status()  # Raise an exception for unsuccessful API calls
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")
        return []

def get_devices_status(api_key, org_id):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + f'organizations/{org_id}/devices/statuses', headers=headers)
        response.raise_for_status()  # Raise an exception for unsuccessful API calls
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")
        return []

def display_device_statuses(devices):
    print("Device Statuses:")
    for device in devices:
        # Print device information without labels
        if 'name' in device:
            print(device['name'])
        if 'lanIp' in device:
            print(device['lanIp'])
        print()

def main():
    api_key = get_api_key()
    
    # Fetch organizations and select the first one
    organizations = get_organizations(api_key)
    if not organizations:
        print("No organizations found or an error occurred.")
        return
    
    # Automatically select the first organization
    selected_org_id = organizations[0]['id']
    print(f"Selected Organization ID: {selected_org_id}")

    # Fetch device statuses for the selected organization
    devices = get_devices_status(api_key, selected_org_id)
    
    if devices:
        display_device_statuses(devices)
    else:
        print("No device data found or an error occurred.")

if __name__ == "__main__":
    main()
