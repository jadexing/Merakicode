#This is a companion script to "Channel Utlization." This script takes the, "Channel Utilization" UTC Data file and converts it to MST/Denver time.
Channel Utilization- API networks/{network_id}/networkHealth/channelUtilization
# @jamieinbox https://jamiegprice.substack.com/

import pandas as pd
from datetime import datetime
import pytz
import re

def convert_utc_to_denver(utc_time_str):
    try:
        # Parse the UTC time string
        utc_time = datetime.strptime(utc_time_str, "%Y-%m-%dT%H:%M:%SZ")
        # Set the timezone to UTC
        utc_time = pytz.utc.localize(utc_time)
        # Convert to Mountain Time (Denver)
        denver_time = utc_time.astimezone(pytz.timezone('America/Denver'))
        # Return the time in the desired format
        return denver_time.strftime("%Y-%m-%dT%H:%M:%S")
    except ValueError:
        # Return the original string if it's not in the expected format
        return utc_time_str

def replace_utc_in_string(data_str):
    # Regular expression pattern for UTC timestamps
    utc_pattern = re.compile(r'\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z')
    # Function to convert UTC timestamp found in the string
    def convert(match):
        return convert_utc_to_denver(match.group(0))
    
    # Replace all UTC timestamps in the string
    return utc_pattern.sub(convert, data_str)

def process_file():
    # Ask for the filename
    input_filename = input("Enter the name of the file to process (with .xlsx extension): ")
    output_filename = input_filename.replace('.xlsx', '_converted_to_Denver.xlsx')
    
    try:
        # Read the Excel file
        df = pd.read_excel(input_filename)
        
        # Replace UTC timestamps in all string columns
        for column in df.columns:
            if df[column].dtype == 'object':
                df[column] = df[column].apply(lambda x: replace_utc_in_string(x) if isinstance(x, str) else x)
        
        # Save the updated DataFrame to a new Excel file
        df.to_excel(output_filename, index=False)
        print(f"Data has been converted and saved to {output_filename}")
    
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    process_file()
