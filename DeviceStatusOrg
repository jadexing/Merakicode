###Jamieinbox - Wi-Fi Cool Cats https://jamiegprice.substack.com/ CWNE #510
#This script runs this: /organizations/{organizationId}/devices/statuses

import requests
import datetime
import csv

BASE_URL = 'https://api.meraki.com/api/v1/'

def get_api_key():
    return input("Enter your Meraki API key: ")

def get_organizations(api_key):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + 'organizations', headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")
        return []

def select_organization(organizations):
    if len(organizations) == 1:
        print(f"Only one organization found: {organizations[0]['name']} (ID: {organizations[0]['id']})")
        return organizations[0]['id']
    else:
        org_idx = int(input("Enter the number of the organization: "))
        return organizations[org_idx - 1]['id']

def get_devices_statuses(api_key, org_id):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + f'organizations/{org_id}/devices/statuses', headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")
        return []

def save_to_csv(data):
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"devices_statuses_{timestamp}.csv"

    if data:
        keys = data[0].keys()  # Assuming all dictionaries have the same keys
        with open(filename, 'w', newline='') as file:
            writer = csv.DictWriter(file, fieldnames=keys)
            writer.writeheader()
            writer.writerows(data)
        print(f"Data saved to {filename}")
    else:
        print("No data to save.")

def main():
    start_time = datetime.datetime.now()

    api_key = get_api_key()
    organizations = get_organizations(api_key)
    if not organizations:
        return

    org_id = select_organization(organizations)
    
    device_statuses = get_devices_statuses(api_key, org_id)
    if not device_statuses:
        return
    
    save_to_csv(device_statuses)

    end_time = datetime.datetime.now()
    duration = end_time - start_time
    duration_minutes = duration.total_seconds() / 60

    print(f"Job completed in {duration_minutes:.2f} minutes.")

if __name__ == "__main__":
    main()
