#Meraki Python code that will sweep your whole organization for a user count above a user inputted number.
#Twitter/X @jamiegprice blog "Wi-Fi Cool Cats." Created by Jamie Price and Chat GPT. 

import requests
import openpyxl
from datetime import datetime

BASE_URL = 'https://api.meraki.com/api/v1/'

def get_api_key():
    return input("Please enter your Meraki API key: ")

def get_min_client_count():
    while True:
        try:
            min_count = int(input("Enter the minimum client count for APs to display: "))
            if min_count >= 0:
                print("Please wait, this will take some time...")
                return min_count
            else:
                print("Please enter a non-negative number.")
        except ValueError:
            print("Please enter a valid integer.")

def get_organizations(api_key):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + 'organizations', headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")
        return []

def get_networks(api_key, org_id):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + f'organizations/{org_id}/networks', headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")
        return []

def get_clients_per_ap(api_key, network_id, network_name, min_client_count):
    headers = {
        'X-Cisco-Meraki-API-Key': api_key,
    }
    try:
        response = requests.get(BASE_URL + f'networks/{network_id}/devices', headers=headers)
        response.raise_for_status()
        devices_data = response.json()

        print(f"\nRetrieving client count per AP for the last 5 minutes in Network {network_name} (ID: {network_id})...")  

        for device in devices_data:
            if device["model"].startswith("MR") or device["model"].startswith("CW"):  
                ap_name = device["name"]
                ap_url = f"https://api.meraki.com/api/v1/devices/{device['serial']}/clients?timespan=300"
                ap_response = requests.get(ap_url, headers=headers)
                if ap_response.status_code == 200:
                    ap_clients_data = ap_response.json()
                    client_count = len(ap_clients_data)
                    if client_count >= min_client_count:
                        print(f"AP Name: {ap_name}, Client Count: {client_count}")

    except requests.exceptions.RequestException as e:
        print(f"Error occurred during API call: {e}")

def main():
    api_key = get_api_key()
    min_client_count = get_min_client_count()

    organizations = get_organizations(api_key)

    if not organizations:
        print("No organizations found. Make sure your API key is correct and you have access permissions.")
        return

    selected_org_id = organizations[0]['id']  

    networks = get_networks(api_key, selected_org_id)

    for network in networks:
        get_clients_per_ap(api_key, network['id'], network['name'], min_client_count)

if __name__ == "__main__":
    main()
