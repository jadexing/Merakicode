"""
Meraki Live Client Count Script

This Python script interacts with the Cisco Meraki Dashboard API to retrieve the live client counts and their associated
AP names for a specific network associated with a specific organization. The script prompts the user to provide the Meraki API key,
organization number, and then lists the networks associated with the organization. The user can choose to see the live client counts
and their associated AP names for a specific network. The script uses proper request throttling and pagination to collect all data
and displays the live client counts and AP names for the chosen network. The data is also saved to a spreadsheet.

Make sure you have the 'requests' and 'pandas' libraries installed. You can install them using 'pip install requests pandas'.

Author: Jamie Price, made with ChatPT (Wi-Fi Cool Cats Blog)
"""

import requests
import time
import pandas as pd

# Function to retrieve a list of live clients from a specific network with pagination
def get_live_clients(api_key, network_id):
    url = f"https://api.meraki.com/api/v1/networks/{network_id}/clients"
    headers = {"X-Cisco-Meraki-API-Key": api_key}
    params = {"perPage": 100}
    clients_list = []

    while True:
        response = requests.get(url, headers=headers, params=params)
        if response.status_code == 200:
            clients_data = response.json()
            clients_list.extend(client for client in clients_data if client.get('status') == 'Online')
            if 'next' in response.links:
                url = response.links['next']['url']
                time.sleep(0.5)  # Throttle the requests to avoid rate-limiting
            else:
                break
        else:
            print(f"Error: Unable to fetch clients for Network ID: {network_id}")
            break

    return clients_list

# Meraki API Key input
api_key = input("Enter your Meraki API key: ")

# Ask for organization number
org_number = input("Enter the organization number: ")

# Retrieve and display the networks associated with the organization
url = f"https://api.meraki.com/api/v1/organizations/{org_number}/networks"
headers = {"X-Cisco-Meraki-API-Key": api_key}
response = requests.get(url, headers=headers)
if response.status_code == 200:
    networks_data = response.json()
    print("\nNetworks associated with the organization:")
    for index, network in enumerate(networks_data, start=1):
        print(f"{index}. {network['name']} (Network ID: {network['id']})")

    # Ask user to select the network for live client counts
    while True:
        try:
            selected_network = int(input("\nEnter the number of the network you want to see the live client counts for: "))
            if 1 <= selected_network <= len(networks_data):
                break
            else:
                print("Invalid input. Please enter a valid number.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

    print("\nPlease wait while gathering data...")

    # Retrieve live client counts and AP names for the selected network
    network_id = networks_data[selected_network - 1]['id']
    network_name = networks_data[selected_network - 1]['name']
    live_clients = get_live_clients(api_key, network_id)

    # Create a dictionary to store live clients and their associated AP names
    live_clients_info = {}

    # Retrieve AP names for each live client
    for client in live_clients:
        client_mac = client['mac']
        ap_name = client.get('apName', 'N/A')  # Default to 'N/A' if no AP name is available
        live_clients_info[client_mac] = ap_name

    # Display live client counts and associated AP names for the chosen network
    print(f"Live Clients and Associated AP Names for {network_name}:")
    for client_mac, ap_name in live_clients_info.items():
        print(f"Client MAC: {client_mac}, AP Name: {ap_name}")

    # Save data to a spreadsheet
    df = pd.DataFrame(live_clients_info.items(), columns=['Client MAC', 'AP Name'])
    df.to_excel("meraki_live_client_ap_names.xlsx", index=False)
    print("\nData saved to 'meraki_live_client_ap_names.xlsx'")

else:
    print("Unable to fetch networks. Please check your API key and organization number.")
